import React, { Component } from 'react';

export default class MatchMaking extends Component {

    constructor(props) {
        super(props);
        this.state = { forecasts: [], loading: true, matchtables: null };


    }



    async getMatchMakingTable() {
        this.setState({ loading: true });
        const response = await fetch('Meeting/GetMatchMakingTable', {
            method: "GET",
            headers: { 'Content-Type': 'application/json' }

        });


        const finalresult = await response.json().then(async (resonse) => {
            this.setState({ loading: false });
            var item = JSON.parse(resonse.value);
            this.setState({ loading: false });
            if (item && item.value) {
                this.setState({ matchtables: item.value });
                return true;

            } else {
                return false;
            }

        }).catch((error) => {
            return false;
        });
        return finalresult;
    }



    componentDidMount() {
        this.getMatchMakingTable();
    }
    render() {

        return (

            <div class="tables">
                <h3>Matchmaking Tables</h3>
                <div class="tables-container">
                    {this.state.loading && <div class="sessions-item">loading...</div>}
                    {

                        this.state.matchtables && this.state.matchtables.map((item, i) => {
                            return (
                                <div class="table">
                                    <div class="circle">
                                        <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path
                                                d="M6.79 41.45C6.78996 39.9319 7.39027 38.4754 8.45997 37.3982C9.52967 36.321 10.9819 35.7105 12.5 35.7H22.79V54C22.7979 57.234 24.0875 60.333 26.3762 62.6179C28.6649 64.9028 31.766 66.1873 35 66.19H52V72.77C52 74.295 51.3942 75.7575 50.3159 76.8358C49.2375 77.9142 47.775 78.52 46.25 78.52H32.82C32.4915 78.5194 32.1661 78.5835 31.8623 78.7088C31.5586 78.8341 31.2826 79.018 31.05 79.25L21.32 89V81C21.32 80.3369 21.0566 79.701 20.5878 79.2322C20.1189 78.7634 19.483 78.5 18.82 78.5H12.5C10.975 78.5 9.51247 77.8942 8.43414 76.8158C7.3558 75.7375 6.75 74.275 6.75 72.75L6.79 41.45Z"
                                                fill="#5E5E5E" />
                                            <path
                                                d="M12.5 83.52H16.32V95C16.3191 95.4951 16.4653 95.9793 16.7399 96.3912C17.0145 96.8032 17.4053 97.1243 17.8627 97.3139C18.3201 97.5035 18.8234 97.553 19.309 97.4562C19.7945 97.3593 20.2404 97.1205 20.59 96.77L33.86 83.52H46.2C47.6155 83.5252 49.0182 83.2511 50.3276 82.7134C51.6371 82.1756 52.8275 81.3848 53.8308 80.3861C54.8341 79.3875 55.6304 78.2007 56.1743 76.8938C56.7181 75.5869 56.9987 74.1855 57 72.77V66.19H52V72.77C52 74.295 51.3942 75.7575 50.3159 76.8358C49.2375 77.9142 47.775 78.52 46.25 78.52H32.82C32.4915 78.5194 32.1661 78.5835 31.8623 78.7088C31.5586 78.8341 31.2826 79.018 31.05 79.25L21.32 89V81C21.32 80.3369 21.0566 79.701 20.5878 79.2322C20.1189 78.7634 19.483 78.5 18.82 78.5H12.5C10.975 78.5 9.51247 77.8942 8.43414 76.8158C7.3558 75.7375 6.75 74.275 6.75 72.75L6.79 41.45C6.78996 39.9319 7.39027 38.4754 8.45997 37.3982C9.52967 36.321 10.9819 35.7105 12.5 35.7H22.79V30.71H12.5C9.65147 30.7126 6.92021 31.8447 4.90505 33.8579C2.8899 35.8712 1.75529 38.6014 1.75 41.45V72.77C1.75265 75.6202 2.88608 78.353 4.90153 80.3684C6.91697 82.3839 9.64974 83.5173 12.5 83.52Z"
                                                fill="#5E5E5E" />
                                            <path
                                                d="M12.5 84.02H16.32V95.5C16.3191 95.9951 16.4653 96.4794 16.7399 96.8913C17.0145 97.3033 17.4053 97.6244 17.8627 97.814C18.3201 98.0035 18.8234 98.0531 19.309 97.9562C19.7945 97.8594 20.2404 97.6206 20.59 97.27L33.86 84.02H46.2C47.6155 84.0253 49.0182 83.7512 50.3276 83.2134C51.6371 82.6757 52.8275 81.8848 53.8308 80.8862C54.8341 79.8876 55.6304 78.7008 56.1743 77.3939C56.7181 76.087 56.9987 74.6856 57 73.27V66.69H60L75.65 82.41C75.9996 82.7606 76.4455 82.9994 76.931 83.0962C77.4166 83.1931 77.92 83.1435 78.3773 82.954C78.8347 82.7644 79.2255 82.4433 79.5001 82.0313C79.7747 81.6194 79.9209 81.1351 79.92 80.64V66.64H86C89.2323 66.648 92.3362 65.3751 94.632 63.0998C96.9279 60.8245 98.2289 57.7323 98.25 54.5V15.21C98.2487 13.6036 97.9306 12.0132 97.3141 10.5298C96.6975 9.04638 95.7945 7.6991 94.6567 6.56504C93.5189 5.43097 92.1687 4.53237 90.6833 3.92065C89.1979 3.30893 87.6064 2.99609 86 3.00004H35C31.7625 3.00269 28.6584 4.28994 26.3692 6.57919C24.0799 8.86843 22.7926 11.9726 22.79 15.21V31.21H12.5C9.65147 31.2127 6.92021 32.3447 4.90505 34.358C2.8899 36.3713 1.75529 39.1015 1.75 41.95V73.27C1.75265 76.1203 2.88608 78.8531 4.90153 80.8685C6.91697 82.884 9.64974 84.0174 12.5 84.02ZM27.79 15.21C27.79 13.2978 28.5496 11.4639 29.9018 10.1118C31.2539 8.75966 33.0878 8.00004 35 8.00004H86C87.9122 8.00004 89.7461 8.75966 91.0982 10.1118C92.4504 11.4639 93.21 13.2978 93.21 15.21V54.5C93.2047 56.4088 92.4427 58.2375 91.0912 59.5854C89.7396 60.9332 87.9088 61.69 86 61.69H77.41C76.747 61.69 76.1111 61.9534 75.6422 62.4223C75.1734 62.8911 74.91 63.527 74.91 64.19V74.61L62.7 62.42C62.4674 62.188 62.1914 62.0041 61.8877 61.8789C61.5839 61.7536 61.2585 61.6894 60.93 61.69H35C33.0912 61.69 31.2604 60.9332 29.9088 59.5854C28.5573 58.2375 27.7953 56.4088 27.79 54.5V15.21ZM6.79 41.95C6.78996 40.4319 7.39027 38.9754 8.45997 37.8983C9.52967 36.8211 10.9819 36.2106 12.5 36.2H22.79V54.5C22.7979 57.7341 24.0875 60.833 26.3762 63.118C28.6649 65.4029 31.766 66.6874 35 66.69H52V73.27C52 74.795 51.3942 76.2576 50.3159 77.3359C49.2375 78.4142 47.775 79.02 46.25 79.02H32.82C32.4915 79.0194 32.1661 79.0836 31.8623 79.2089C31.5586 79.3341 31.2826 79.518 31.05 79.75L21.32 89.5V81.5C21.32 80.837 21.0566 80.2011 20.5878 79.7323C20.1189 79.2634 19.483 79 18.82 79H12.5C10.975 79 9.51247 78.3942 8.43414 77.3159C7.3558 76.2376 6.75 74.775 6.75 73.25L6.79 41.95Z"
                                                fill="#5E5E5E" />
                                            <path
                                                d="M83.0025 43.8202V26.1802C83.0148 25.9413 82.9593 25.7038 82.8426 25.4951C82.7258 25.2863 82.5524 25.1148 82.3425 25.0002C82.1381 24.8845 81.9073 24.8237 81.6725 24.8237C81.4376 24.8237 81.2068 24.8845 81.0025 25.0002L72.5225 30.5002V25.3802C72.5334 25.2029 72.5079 25.0252 72.4475 24.8581C72.387 24.691 72.293 24.5381 72.1712 24.4088C72.0494 24.2795 71.9023 24.1765 71.7392 24.1062C71.576 24.0359 71.4001 23.9999 71.2225 24.0002H47.3225C47.1431 23.9971 46.9651 24.0311 46.7996 24.1002C46.634 24.1692 46.4845 24.2718 46.3606 24.4014C46.2366 24.531 46.1408 24.6849 46.0791 24.8533C46.0175 25.0218 45.9914 25.2012 46.0025 25.3802V44.6302C45.9928 44.8084 46.02 44.9867 46.0823 45.154C46.1445 45.3212 46.2406 45.4739 46.3644 45.6024C46.4882 45.7309 46.6372 45.8325 46.802 45.901C46.9669 45.9694 47.144 46.0032 47.3225 46.0002H71.2225C71.4009 46.0032 71.5781 45.9694 71.7429 45.901C71.9077 45.8325 72.0567 45.7309 72.1805 45.6024C72.3044 45.4739 72.4004 45.3212 72.4627 45.154C72.5249 44.9867 72.5521 44.8084 72.5425 44.6302V39.4702L81.0025 45.0002C81.2044 45.1123 81.4315 45.1711 81.6625 45.1711C81.8934 45.1711 82.1206 45.1123 82.3225 45.0002C82.5362 44.8884 82.7136 44.718 82.834 44.5091C82.9544 44.3001 83.0129 44.0611 83.0025 43.8202Z"
                                                fill="#67B1E2" />
                                            <path
                                                d="M26.9188 64.5853C29.8 66.7752 31.1012 66.69 33.01 66.69H57.01V68.69H50.01H33.01C29.776 68.6873 26.6749 67.4028 24.3862 65.1179C22.0975 62.833 20.8079 59.734 20.8 56.5V38.2V30.21H22.8V56.5C22.8053 58.4087 24.0376 62.3953 26.9188 64.5853Z"
                                                fill="white" />
                                        </svg>
                                    </div>
                                    <div class="title">
                                        {item.fields.Title}
                                    </div>
                                </div>);
                        })}

                </div>
                <div class="see-all">
                    <button>See All</button>
                </div>
            </div>

        )
    }
}



